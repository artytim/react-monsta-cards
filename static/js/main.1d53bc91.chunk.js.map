{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAIaA,G,MAAO,SAACC,GAAD,OAClB,yBAAKC,UAAU,kBACb,yBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,gCAAML,EAAMI,QAAQE,KAApB,KACA,+BAAKN,EAAMI,QAAQG,MAAnB,QCLSC,G,MAAW,SAACR,GAAD,OACtB,yBAAKC,UAAU,aACZD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,UCLzBQ,G,MAAY,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OACvB,2BACEb,UAAU,aACVc,KAAK,SACLF,YAAY,kBACZG,SAAUF,MCuCCG,G,wDAxCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,QAAS,kBACjDC,QAAQC,IAAI,EAAKC,WAdnB,EAAKA,MAAQ,CACXhB,SAAU,GACVW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEV,SAAUqB,S,oBAS/C,WACE,MAAkCC,KAAKN,MAA/BhB,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZY,EAAmBvB,EAASwB,QAAO,SAAC7B,GAAD,OACvCA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,yBAAKjC,UAAU,OACb,gDACA,kBAAC,EAAD,CACEY,YAAY,kBACZC,aAAciB,KAAKjB,eAErB,kBAAC,EAAD,CAAUL,SAAUuB,S,GAnCVI,cCFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1d53bc91.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n  <div className='card-container'>\r\n    <img\r\n      alt='monster'\r\n      src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n    />\r\n    <h2> {props.monster.name} </h2>\r\n    <p> {props.monster.email} </p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n  <div className='card-list'>\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='search monsters'\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React, { Component } from 'react';\r\n\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ searchField: event.target.value }, () =>\r\n      console.log(this.state)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className='App'>\r\n        <h1>Monsters Rolodex</h1>\r\n        <SearchBox\r\n          placeholder='search monsters'\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}